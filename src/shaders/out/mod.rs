pub mod main;
# [cfg_attr (debug_assertions , derive (Debug))] pub struct FragmentEntry < '__lt > { pub entry_point : & 'static str , pub targets : & '__lt [:: core :: option :: Option < wgpu :: ColorTargetState >] , } pub fn make_fragment_state < '__lt > (module : & '__lt wgpu :: ShaderModule , entry : & '__lt FragmentEntry < '__lt > ,) -> wgpu :: FragmentState < '__lt > { wgpu :: FragmentState { module , entry_point : Some (entry . entry_point) , targets : & entry . targets , compilation_options : Default :: default () , } } # [cfg_attr (debug_assertions , derive (Debug))] pub struct VertexEntry < const N : usize > { pub entry_point : & 'static str , pub buffers : [wgpu :: VertexBufferLayout < 'static > ; N] , } pub fn make_vertex_state < '__lt , const N : usize > (module : & '__lt wgpu :: ShaderModule , entry : & '__lt VertexEntry < N > ,) -> wgpu :: VertexState < '__lt > { wgpu :: VertexState { module , entry_point : Some (entry . entry_point) , buffers : & entry . buffers , compilation_options : Default :: default () , } }